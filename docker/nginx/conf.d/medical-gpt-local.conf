# 本地开发配置 - 仅HTTP
server {
    listen 80;
    server_name localhost medical-gpt.local;
    root /usr/share/nginx/html/web;
    index chat-enhanced.html index.html index.htm;

    # 安全头部
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://api.deepseek.com;" always;
    
    # 医疗AI助手标识
    add_header X-Powered-By "Medical-AI-Assistant" always;
    add_header X-Medical-Version "1.0" always;

    # API接口代理 - 必须在前端配置之前
    location /api/ {
        # 代理到后端服务，去掉/api前缀
        proxy_pass http://medical-gpt-server:9503/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 超时设置
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # 请求大小限制
        client_max_body_size 10m;
        
        # 医疗AI专用头部
        proxy_set_header X-Medical-Mode "true";
        proxy_set_header X-Medical-Version "1.0";
        
        # CORS处理
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin '*';
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;
        }
        
        add_header Access-Control-Allow-Origin '*' always;
    }

    # 前端静态文件 - Web端
    location / {
        alias /usr/share/nginx/html/web/;
        try_files $uri $uri/ @fallback;
        
        # 缓存策略
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Medical-Static "true";
        }
        
        # HTML文件不缓存
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }
    }

    # 前端fallback处理
    location @fallback {
        rewrite ^.*$ /index.html last;
    }


    
    # OpenAI聊天接口代理
    location /openai/ {
        # 代理到后端服务
        proxy_pass http://medical-gpt-server:9503;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 超时设置
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # 请求大小限制
        client_max_body_size 10m;
        
        # 医疗AI专用头部
        proxy_set_header X-Medical-Mode "true";
        proxy_set_header X-Medical-Version "1.0";
        
        # CORS处理
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin '*';
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;
        }
        
        add_header Access-Control-Allow-Origin '*' always;
    }

    # 管理后台静态文件
    location /admin {
        alias /usr/share/nginx/html/admin/;
        try_files $uri $uri/ @admin_fallback;
    }

    # 管理后台fallback处理
    location @admin_fallback {
        rewrite ^.*$ /admin/index.html last;
    }

    # 健康检查
    location /health {
        access_log off;
        return 200 "Medical AI Assistant is healthy\n";
        add_header Content-Type text/plain;
    }

    # 拒绝访问敏感文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~* \.(env|log|sql|bak|backup|swp|tmp)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # 错误页面
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html/web;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html/web;
        internal;
    }
}